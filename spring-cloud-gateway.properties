server.port=8082

# Basically enabled spring cloud to navigate incoming request based on service discovery (automatically without mapping manual)
# But how does the spring gateway know ? well by using the application id (or application name) of each service
# Url pattern : http://localhost:8082/<application name>/<the resources you want>
# For Example : http://localhost:8082/organization-service/v1/organization/1 
spring.cloud.gateway.discovery.locator.enabled = true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId = true

# This is just to register this cloud gateway to the service discovery
eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

# To enable the project to show the list of endpoints. You can see it using url : http://localhost:8082/actuator/gateway/routes
management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=gateway

# Mapping url manually

# Probably the id of the service
spring.cloud.gateway.routes[0].id= organization-service 

# The id of the service, lb means the service will use client side balancing
spring.cloud.gateway.routes[0].uri= lb://organization-service

# Applied to any request with this pattern. ** means any string
spring.cloud.gateway.routes[0].predicates[0].Path= /organization/**

# Rewrite the path, so initially it's /organization/(?<path>.*), then the /organization/ will be removed
spring.cloud.gateway.routes[0].filters[0].RewritePath=/organization/(?<path>.*), /$\{path}



