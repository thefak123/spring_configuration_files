example:
  property: I AM THE DEV


spring:
  security:
     oauth2:
       resourceserver:
           jwt: 
             issuer-uri: http://localhost:9999/realms/microservices_authorization_server
       client:
          registration:
             keycloak:
                 client-id: microservices_authorization_server
                 authorization-grant-type: authorization_code
                 scope: openid
          provider:
             keycloak:
                issuer-uri: http://localhost:9999/realms/microservices_authorization_server
                user-name-attribute: username
              
  jpa:
    hibernate:
      ddl-auto: update
    database: POSTGRESQL

eureka:
   instance:
      preferIpAddress: true
   client:
      registerWithEureka: true # Tells spring to register this project/service to eureka (to specified url)
      fetchRegistry: true # cache the request (so that it won't request to eureka, if the cache information is available). It will refresh the cache every 30 seconds
      serviceUrl: 
        defaultZone: http://localhost:8070/eureka/


 
